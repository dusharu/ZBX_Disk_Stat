##### ZBX_Disk_Stat #####
# Downloaded from:
#   https://github.com/dusharu/ZBX_Disk_Stat
#
# Docs:
#   https://www.kernel.org/doc/Documentation/admin-guide/iostats.rst 
#   https://www.kernel.org/doc/Documentation/ABI/testing/procfs-diskstats

#### Discovery ####
UserParameter=custom.blkdev.discovery,awk ' BEGIN { printf("{\n\t\"data\":["); } { if (FNR != 1) {printf ("\t},")}; printf("\n\t\t{\t\"{#DEVBLK}\":\""); if (match($3, /^dm-[0-9]*/)) { system("ls -l /dev/mapper/ |grep -e \"../" $3  "$\" | awk \"{print \\$9}\"|tr -d \"\\n\""); } else { printf($3); }; printf("\""); } END { {printf ("\t}\n")} printf("\t]\n}\n"); }' /proc/diskstats

#### Get Stat ####
UserParameter=custom.blkdev.all_stat[*],DISK="$1"; if [[ ! -b "/dev/$DISK" ]]; then DISK="$( ls -l /dev/mapper/ |awk "/ $DISK / {gsub(\"../\",\"\",\$$11); print \$$11}" )"; fi; if [[ "$DISK" != "" ]]; then grep -m1 " $DISK " /proc/diskstats | awk ' BEGIN { printf("{\n\"ZBX_Disk_Stat\": [ {"); }   { printf("\n\t\"name\": \"" $$3 "\","); printf("\n\t\"read_complete\": \"" $$4 "\","); printf("\n\t\"read_sector\": \"" $$6 "\","); printf("\n\t\"read_time\": \"" $$7 "\","); printf("\n\t\"write_complete\": \"" $$8 "\","); printf("\n\t\"write_sector\": \"" $$10 "\","); printf("\n\t\"write_time\": \"" $$11 "\","); printf("\n\t\"io_queue\": \"" $$12 "\""); }     END { printf("\n\t} ]\n}"); }'; else exit 100; fi
